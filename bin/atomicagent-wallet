#!/usr/bin/env node

const program = require('commander')
const { addCommonOptions } = require('./common')
const { getClient } = require('../src/utils/clients')
const assets = require('@liquality/cryptoassets').default

addCommonOptions(program)

program
  .command('balance <asset>')
  .action(async (asset) => {
    const client = getClient(asset)
    const addresses = await client.wallet.getUsedAddresses()
    const balance = await client.chain.getBalance(addresses)
    const balanceInCurrency = assets[asset.toLowerCase()].unitToCurrency(balance)
    const code = assets[asset.toLowerCase()].code
    console.log(`${balanceInCurrency} ${code}`)
  })

program
  .command('getnewaddress <asset>')
  .action(async (asset) => {
    const client = getClient(asset)
    const address = await client.wallet.getUnusedAddress()
    console.log(address.toString())
  })

program
  .command('sendtoaddress <asset> <address> <amount>')
  .action(async (asset, address, amount) => {
    const amountInUnit = assets[asset.toLowerCase()].currencyToUnit(amount)
    const client = getClient(asset)
    const tx = await client.chain.sendTransaction(address, amountInUnit)
    console.log(tx)
  })

program.parse(process.argv)
